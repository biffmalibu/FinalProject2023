///////////////////////////////////////////////////////////////////////////////////////
//                                                                                   //
//  Author: Bradford Torpey                                                          //
//  Purpose: To display live currency information utilizing the Currencybeacon API   //
//                                                                                   //
///////////////////////////////////////////////////////////////////////////////////////
package CryptoProject;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import javax.swing.JLabel;
import javax.swing.SwingWorker;
import javax.swing.Timer;

/**
 *
 * @author bradf
 */
public class ShowCurrency extends javax.swing.JFrame {
    private CurrencyData data;
    /**
     * Creates new form ShowCurrency
     */
    public ShowCurrency() {
        initComponents();
        data = new CurrencyData(); // Create an instance of currency data for the prices
        updateCurrencyData(selectedCurrency.getSelectedItem().toString()); // Initially populate the values
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        autoUpdateCB = new javax.swing.JCheckBox();
        valuesScrollPane = new javax.swing.JScrollPane();
        valuesPanel = new javax.swing.JPanel();
        usdPanel = new javax.swing.JPanel();
        usdImage = new javax.swing.JLabel();
        usdLabel = new javax.swing.JLabel();
        usdPrice = new javax.swing.JLabel();
        usdChangePercent = new javax.swing.JLabel();
        usdChangeValue = new javax.swing.JLabel();
        eurPanel = new javax.swing.JPanel();
        eurImage = new javax.swing.JLabel();
        eurLabel = new javax.swing.JLabel();
        eurPrice = new javax.swing.JLabel();
        eurChangePercent = new javax.swing.JLabel();
        eurChangeValue = new javax.swing.JLabel();
        jpyPanel = new javax.swing.JPanel();
        jpyImage = new javax.swing.JLabel();
        jpyLabel = new javax.swing.JLabel();
        jpyPrice = new javax.swing.JLabel();
        jpyChangePercent = new javax.swing.JLabel();
        jpyChangeValue = new javax.swing.JLabel();
        gbpPanel = new javax.swing.JPanel();
        gbpImage = new javax.swing.JLabel();
        gbpLabel = new javax.swing.JLabel();
        gbpPrice = new javax.swing.JLabel();
        gbpChangeValue = new javax.swing.JLabel();
        gbpChangePercent = new javax.swing.JLabel();
        audPanel = new javax.swing.JPanel();
        audImage = new javax.swing.JLabel();
        audLabel = new javax.swing.JLabel();
        audPrice = new javax.swing.JLabel();
        audChangePercent = new javax.swing.JLabel();
        audChangeValue = new javax.swing.JLabel();
        cadPanel = new javax.swing.JPanel();
        cadImage = new javax.swing.JLabel();
        cadLabel = new javax.swing.JLabel();
        cadPrice = new javax.swing.JLabel();
        cadChangePercent = new javax.swing.JLabel();
        cadChangeValue = new javax.swing.JLabel();
        chfPanel = new javax.swing.JPanel();
        chfImage = new javax.swing.JLabel();
        chfLabel = new javax.swing.JLabel();
        chfPrice = new javax.swing.JLabel();
        chfChangePercent = new javax.swing.JLabel();
        chfChangeValue = new javax.swing.JLabel();
        cnyPanel = new javax.swing.JPanel();
        cnyImage = new javax.swing.JLabel();
        cnyLabel = new javax.swing.JLabel();
        cnyPrice = new javax.swing.JLabel();
        cnyChangePercent = new javax.swing.JLabel();
        cnyChangeValue = new javax.swing.JLabel();
        nokPanel = new javax.swing.JPanel();
        nokImage = new javax.swing.JLabel();
        nokLabel = new javax.swing.JLabel();
        nokPrice = new javax.swing.JLabel();
        nokChangePercent = new javax.swing.JLabel();
        nokChangeValue = new javax.swing.JLabel();
        mxnPanel = new javax.swing.JPanel();
        mxnImage = new javax.swing.JLabel();
        mxnLabel = new javax.swing.JLabel();
        mxnPrice = new javax.swing.JLabel();
        mxnChangePercent = new javax.swing.JLabel();
        mxnChangeValue = new javax.swing.JLabel();
        selectedCurrency = new javax.swing.JComboBox<>();
        updateButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        dateLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));

        Title.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title.setText("Live Currency Prices");

        autoUpdateCB.setText("AutoUpdate");
        autoUpdateCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoUpdateCBActionPerformed(evt);
            }
        });

        valuesScrollPane.setBackground(new java.awt.Color(153, 153, 153));

        valuesPanel.setBackground(new java.awt.Color(102, 102, 102));

        usdPanel.setBackground(new java.awt.Color(153, 153, 153));
        usdPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usdPanelMouseClicked(evt);
            }
        });

        usdImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/usa.png"))); // NOI18N

        usdLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        usdLabel.setText("USD - United States Dollar");

        usdPrice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        usdPrice.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        usdPrice.setText("Loading...");

        usdChangePercent.setText("%");

        usdChangeValue.setText("+-");

        javax.swing.GroupLayout usdPanelLayout = new javax.swing.GroupLayout(usdPanel);
        usdPanel.setLayout(usdPanelLayout);
        usdPanelLayout.setHorizontalGroup(
            usdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usdPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(usdImage, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(usdChangeValue, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(usdChangePercent, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(usdPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        usdPanelLayout.setVerticalGroup(
            usdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, usdPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(usdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(usdImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(usdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(usdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(usdPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(usdChangePercent)
                        .addComponent(usdChangeValue)))
                .addContainerGap())
        );

        eurPanel.setBackground(new java.awt.Color(153, 153, 153));
        eurPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eurPanelMouseClicked(evt);
            }
        });

        eurImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/europe.png"))); // NOI18N

        eurLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        eurLabel.setText("EUR - Euro");

        eurPrice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        eurPrice.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        eurPrice.setText("Loading...");

        eurChangePercent.setText("%");

        eurChangeValue.setText("+-");

        javax.swing.GroupLayout eurPanelLayout = new javax.swing.GroupLayout(eurPanel);
        eurPanel.setLayout(eurPanelLayout);
        eurPanelLayout.setHorizontalGroup(
            eurPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eurPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(eurImage, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eurLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(eurChangeValue, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(eurChangePercent, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(eurPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        eurPanelLayout.setVerticalGroup(
            eurPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eurPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(eurPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eurLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(eurPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(eurChangePercent)
                    .addComponent(eurChangeValue)
                    .addComponent(eurImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jpyPanel.setBackground(new java.awt.Color(153, 153, 153));
        jpyPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpyPanelMouseClicked(evt);
            }
        });

        jpyImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/japan.png"))); // NOI18N

        jpyLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jpyLabel.setText("JPY - Japanese Yen");

        jpyPrice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jpyPrice.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jpyPrice.setText("Loading...");

        jpyChangePercent.setText("%");

        jpyChangeValue.setText("+-");

        javax.swing.GroupLayout jpyPanelLayout = new javax.swing.GroupLayout(jpyPanel);
        jpyPanel.setLayout(jpyPanelLayout);
        jpyPanelLayout.setHorizontalGroup(
            jpyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpyImage, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpyChangeValue, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jpyChangePercent, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jpyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpyPanelLayout.setVerticalGroup(
            jpyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jpyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(jpyPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(jpyChangePercent)
                        .addComponent(jpyChangeValue))
                    .addComponent(jpyImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        gbpPanel.setBackground(new java.awt.Color(153, 153, 153));
        gbpPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gbpPanelMouseClicked(evt);
            }
        });

        gbpImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/united-kingdom.png"))); // NOI18N

        gbpLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        gbpLabel.setText("GBP - Great British Pound");

        gbpPrice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        gbpPrice.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        gbpPrice.setText("Loading...");

        gbpChangeValue.setText("+-");

        gbpChangePercent.setText("%");

        javax.swing.GroupLayout gbpPanelLayout = new javax.swing.GroupLayout(gbpPanel);
        gbpPanel.setLayout(gbpPanelLayout);
        gbpPanelLayout.setHorizontalGroup(
            gbpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gbpPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gbpImage, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gbpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(gbpChangeValue, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gbpChangePercent, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(gbpPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        gbpPanelLayout.setVerticalGroup(
            gbpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gbpPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gbpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gbpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(gbpLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(gbpPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(gbpChangeValue)
                        .addComponent(gbpChangePercent))
                    .addComponent(gbpImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        audPanel.setBackground(new java.awt.Color(153, 153, 153));
        audPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                audPanelMouseClicked(evt);
            }
        });

        audImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/australia.png"))); // NOI18N

        audLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        audLabel.setText("AUD - Austrailian Dollar");

        audPrice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        audPrice.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        audPrice.setText("Loading...");

        audChangePercent.setText("%");

        audChangeValue.setText("+-");

        javax.swing.GroupLayout audPanelLayout = new javax.swing.GroupLayout(audPanel);
        audPanel.setLayout(audPanelLayout);
        audPanelLayout.setHorizontalGroup(
            audPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(audPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(audImage, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(audLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(audChangeValue, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(audChangePercent, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(audPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        audPanelLayout.setVerticalGroup(
            audPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(audPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(audPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(audPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(audLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(audPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(audChangePercent)
                        .addComponent(audChangeValue))
                    .addComponent(audImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        cadPanel.setBackground(new java.awt.Color(153, 153, 153));
        cadPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cadPanelMouseClicked(evt);
            }
        });

        cadImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/canada.png"))); // NOI18N

        cadLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cadLabel.setText("CAD - Canadian Dollars");

        cadPrice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cadPrice.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        cadPrice.setText("Loading...");

        cadChangePercent.setText("%");

        cadChangeValue.setText("+-");

        javax.swing.GroupLayout cadPanelLayout = new javax.swing.GroupLayout(cadPanel);
        cadPanel.setLayout(cadPanelLayout);
        cadPanelLayout.setHorizontalGroup(
            cadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cadPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cadImage, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cadChangeValue, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cadChangePercent, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cadPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        cadPanelLayout.setVerticalGroup(
            cadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cadPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cadLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(cadPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(cadChangePercent)
                        .addComponent(cadChangeValue))
                    .addComponent(cadImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        chfPanel.setBackground(new java.awt.Color(153, 153, 153));
        chfPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chfPanelMouseClicked(evt);
            }
        });

        chfImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/switzerland.png"))); // NOI18N

        chfLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        chfLabel.setText("CHF - Swiss Francs");

        chfPrice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        chfPrice.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        chfPrice.setText("Loading...");

        chfChangePercent.setText("%");

        chfChangeValue.setText("+-");

        javax.swing.GroupLayout chfPanelLayout = new javax.swing.GroupLayout(chfPanel);
        chfPanel.setLayout(chfPanelLayout);
        chfPanelLayout.setHorizontalGroup(
            chfPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chfPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chfImage, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chfLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chfChangeValue, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chfChangePercent, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(chfPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        chfPanelLayout.setVerticalGroup(
            chfPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chfPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(chfPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(chfPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(chfLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(chfPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(chfChangePercent)
                        .addComponent(chfChangeValue))
                    .addComponent(chfImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        cnyPanel.setBackground(new java.awt.Color(153, 153, 153));
        cnyPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cnyPanelMouseClicked(evt);
            }
        });

        cnyImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/china.png"))); // NOI18N

        cnyLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cnyLabel.setText("CNY - Chinese Yuan");

        cnyPrice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cnyPrice.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        cnyPrice.setText("Loading...");

        cnyChangePercent.setText("%");

        cnyChangeValue.setText("+-");

        javax.swing.GroupLayout cnyPanelLayout = new javax.swing.GroupLayout(cnyPanel);
        cnyPanel.setLayout(cnyPanelLayout);
        cnyPanelLayout.setHorizontalGroup(
            cnyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cnyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cnyImage, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cnyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cnyChangeValue, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cnyChangePercent, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cnyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        cnyPanelLayout.setVerticalGroup(
            cnyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cnyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cnyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cnyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cnyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(cnyPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(cnyChangePercent)
                        .addComponent(cnyChangeValue))
                    .addComponent(cnyImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        nokPanel.setBackground(new java.awt.Color(153, 153, 153));
        nokPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nokPanelMouseClicked(evt);
            }
        });

        nokImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/norway.png"))); // NOI18N

        nokLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        nokLabel.setText("NOK - Norwegian Krone");

        nokPrice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        nokPrice.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        nokPrice.setText("Loading...");

        nokChangePercent.setText("%");

        nokChangeValue.setText("+-");

        javax.swing.GroupLayout nokPanelLayout = new javax.swing.GroupLayout(nokPanel);
        nokPanel.setLayout(nokPanelLayout);
        nokPanelLayout.setHorizontalGroup(
            nokPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nokPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nokImage, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nokLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nokChangeValue, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(nokChangePercent, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(nokPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        nokPanelLayout.setVerticalGroup(
            nokPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nokPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(nokPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(nokPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nokLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(nokPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(nokChangePercent)
                        .addComponent(nokChangeValue))
                    .addComponent(nokImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        mxnPanel.setBackground(new java.awt.Color(153, 153, 153));
        mxnPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mxnPanelMouseClicked(evt);
            }
        });

        mxnImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/mexico.png"))); // NOI18N

        mxnLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        mxnLabel.setText("MXN - Mexican Peso");

        mxnPrice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        mxnPrice.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        mxnPrice.setText("Loading...");

        mxnChangePercent.setText("%");

        mxnChangeValue.setText("+-");

        javax.swing.GroupLayout mxnPanelLayout = new javax.swing.GroupLayout(mxnPanel);
        mxnPanel.setLayout(mxnPanelLayout);
        mxnPanelLayout.setHorizontalGroup(
            mxnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mxnPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mxnImage, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mxnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mxnChangeValue, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mxnChangePercent, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(mxnPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        mxnPanelLayout.setVerticalGroup(
            mxnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mxnPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mxnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mxnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(mxnLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(mxnPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(mxnChangePercent)
                        .addComponent(mxnChangeValue))
                    .addComponent(mxnImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout valuesPanelLayout = new javax.swing.GroupLayout(valuesPanel);
        valuesPanel.setLayout(valuesPanelLayout);
        valuesPanelLayout.setHorizontalGroup(
            valuesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(valuesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(valuesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usdPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eurPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gbpPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(audPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cadPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chfPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cnyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nokPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mxnPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        valuesPanelLayout.setVerticalGroup(
            valuesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(valuesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(usdPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eurPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gbpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(audPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cadPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chfPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cnyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nokPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mxnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        valuesScrollPane.setViewportView(valuesPanel);

        selectedCurrency.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "USD", "EUR", "JPY", "GBP", "AUD", "CAD", "CHF", "CNY", "NOK", "MXN" }));
        selectedCurrency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectedCurrencyActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        dateLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dateLabel.setText("Mon Jan 1st 12:00:00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 515, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectedCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateButton)
                    .addComponent(valuesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(autoUpdateCB, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backButton)
                    .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(autoUpdateCB, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectedCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateButton))
                .addGap(1, 1, 1)
                .addComponent(valuesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Calls the function to update the JLabels with the selected currency's conversions.
     * 
     * @param evt Selected currency changed
     */
    private void selectedCurrencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectedCurrencyActionPerformed
        updateCurrencyData(selectedCurrency.getSelectedItem().toString());  // Update the values
    }//GEN-LAST:event_selectedCurrencyActionPerformed

    /**
     * Go back to the main menu
     * 
     * @param evt Back button pressed
     */
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        new MainMenu().setVisible(true);
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed
    
    /**
     * Updates the API currency values and then prints the updated values
     * 
     * @param evt Update Button pressed
     */
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        updateButton.setEnabled(false);
        SwingWorker<Void, Void> buttonPressed = new SwingWorker<Void, Void>() {        //           https://docs.oracle.com/javase%2F7%2Fdocs%2Fapi%2F%2F/javax/swing/Timer.html                                                                                      
            @Override                                                                  // Create a non blocking swingworker to run in the background
            protected Void doInBackground() throws Exception {                         
                data.updateCurrencyData("latest");                                          // Update the prices in the data class when the button is clicked
                data.updateCurrencyData("historical"); 
                updateCurrencyData(selectedCurrency.getSelectedItem().toString());  // Update the values
                return null;
            }
            @Override
            protected void done() {
                Timer timer = new Timer(60000, e -> {
                    updateButton.setEnabled(true); // Enable the button after one minute of being pressed
                });
                timer.setRepeats(false);                                               // Stop the timer from repeating
                timer.start();
            }
        };
        buttonPressed.execute();  
    }//GEN-LAST:event_updateButtonActionPerformed

    private void autoUpdateCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoUpdateCBActionPerformed
        Timer autoUpdateTimer = new Timer(60000, new ActionListener() { // Start a 60 second timer to update the values
            @Override
            public void actionPerformed(ActionEvent e) {
                if (autoUpdateCB.isSelected()) {
                    data.updateCurrencyData("latest");                                          // Update the prices in the data class when the button is clicked
                    data.updateCurrencyData("historical"); 
                    updateCurrencyData(selectedCurrency.getSelectedItem().toString());  // Update the values
                }
            }
        });

        if (autoUpdateCB.isSelected()) {          // When selected
            updateButton.setEnabled(false);     // Disable the updateButton
            autoUpdateTimer.setRepeats(true); // Repeat the timer every 10 seconds
            autoUpdateTimer.start();              // Start the timer
        } else { // When deselected
            updateButton.setEnabled(true); // Enable the updateButton
            autoUpdateTimer.stop(); // Disable the timer if running
            autoUpdateCB.setEnabled(false); // Disable the checkbox and update button for 5 seconds
            updateButton.setEnabled(false);

            // After 5 seconds, re-enable the checkbox
            Timer cooldownTimer = new Timer(5000, new ActionListener() { // After 5 seconds, enable them again
                @Override
                public void actionPerformed(ActionEvent e) {
                    autoUpdateCB.setEnabled(true);
                    updateButton.setEnabled(true);
                }
            });
            cooldownTimer.setRepeats(false);
            cooldownTimer.start();
        }

    }//GEN-LAST:event_autoUpdateCBActionPerformed

    private void usdPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usdPanelMouseClicked
        createIndividualWindow("USD");
    }//GEN-LAST:event_usdPanelMouseClicked

    private void eurPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eurPanelMouseClicked
        createIndividualWindow("EUR");
    }//GEN-LAST:event_eurPanelMouseClicked

    private void jpyPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpyPanelMouseClicked
        createIndividualWindow("JPY");
    }//GEN-LAST:event_jpyPanelMouseClicked

    private void gbpPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gbpPanelMouseClicked
        createIndividualWindow("GBP");
    }//GEN-LAST:event_gbpPanelMouseClicked

    private void audPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_audPanelMouseClicked
        createIndividualWindow("AUD");
    }//GEN-LAST:event_audPanelMouseClicked

    private void cadPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cadPanelMouseClicked
        createIndividualWindow("CAD");
    }//GEN-LAST:event_cadPanelMouseClicked

    private void chfPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chfPanelMouseClicked
        createIndividualWindow("CHF");
    }//GEN-LAST:event_chfPanelMouseClicked

    private void cnyPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cnyPanelMouseClicked
        createIndividualWindow("CNY");
    }//GEN-LAST:event_cnyPanelMouseClicked

    private void nokPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nokPanelMouseClicked
        createIndividualWindow("NOK");
    }//GEN-LAST:event_nokPanelMouseClicked

    private void mxnPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mxnPanelMouseClicked
        createIndividualWindow("MXN");
    }//GEN-LAST:event_mxnPanelMouseClicked

    private void createIndividualWindow(String fromCurrency) {
        String toCurrency = selectedCurrency.getSelectedItem().toString();
        Double currentRate = data.getConversionRate(fromCurrency, toCurrency); // Calculate the current and historic rates
        Double historicRate = data.getHistoricRate(fromCurrency, toCurrency);
        Double dailyChange = currentRate - historicRate;     // Find the difference and also convert the different to a percentage
        Double percentChange = (dailyChange/historicRate) * 100; 
        new IndividualCurrencyWindow(fromCurrency, toCurrency, currentRate, historicRate, dailyChange, percentChange).setVisible(true);
    }
    /**
     * Updates the currencies prices and 24 hour change as a value and as a percentage
     * 
     * @param base The selected currency to convert to
     */
    private void updateCurrencyData(String base) {
        setTitle("Currency prices in " + base);
        String symbol = getCurrencySymbol(base); // Get the currency symbol to use
        String[] currencies = { // Array of strings for the currency names
            "USD", "EUR", "JPY", "GBP", "AUD",
            "CAD", "CHF", "CNY", "NOK", "MXN",
        };
        JLabel[] priceLabels = {usdPrice, eurPrice, jpyPrice, gbpPrice, audPrice, cadPrice, chfPrice, cnyPrice, nokPrice, mxnPrice}; // JLabels for easy access
        JLabel[] percentLabels = {usdChangePercent, eurChangePercent, jpyChangePercent, gbpChangePercent, audChangePercent, cadChangePercent, chfChangePercent, cnyChangePercent, nokChangePercent, mxnChangePercent};
        JLabel[] changeLabels = {usdChangeValue, eurChangeValue, jpyChangeValue, gbpChangeValue, audChangeValue, cadChangeValue, chfChangeValue, cnyChangeValue, nokChangeValue, mxnChangeValue};
        DecimalFormat decimalFormat = new DecimalFormat("0.0###"); // Format the value with two decimal places and commas
        decimalFormat.setGroupingUsed(true); // Enable comma grouping
        dateLabel.setText("Updated: " + data.getDate());
        for (int i = 0; i < priceLabels.length; i++) {
            Double currentRate = data.getConversionRate(currencies[i], base); // Calcukate the current and historic rates
            Double historicRate = data.getHistoricRate(currencies[i], base);
            Double dailyChange = currentRate - historicRate;     // Find the difference and also convert the different to a percentage
            Double percentChange = (dailyChange/historicRate) * 100; 
            
            priceLabels[i].setText(symbol + decimalFormat.format(currentRate)); // Set the price label
            
            if (percentChange != 0)
                percentLabels[i].setText(String.format("%.4f", percentChange) + "%"); // Print the percentage with 4 decimal places
            else 
                percentLabels[i].setText(percentChange.toString()); // Just print 0.0 when the percent is 0%
            
            if (percentChange > 0)
                percentLabels[i].setForeground(Color.GREEN); // Adjust the color of the percentage if it is negative or positve, or 0.
            else if (percentChange < 0)
                percentLabels[i].setForeground(Color.RED);
            else
                percentLabels[i].setForeground(Color.BLACK);
            
            if (dailyChange > 0) {// Add a "+" if positive 
                changeLabels[i].setText("+" + String.format("%.8f", dailyChange));  // Print the difference with 12 decimal places
                changeLabels[i].setForeground(Color.GREEN);
            }
            else if (dailyChange < 0) {
                changeLabels[i].setText(String.format("%.8f", dailyChange)); // Print the difference with 12 decimal places
                changeLabels[i].setForeground(Color.RED);
            }
            else {
                changeLabels[i].setText(dailyChange.toString()); // Print the difference as 0.0 if only 0.
                changeLabels[i].setForeground(Color.BLACK);
            }
            
        }
    }
    /**
     * Helper method to find the correct currency symbol to print.
     * 
     * @param currency The current selected currency
     * @return The corresponding currency symbol
     */
    private String getCurrencySymbol(String currency) {
        String symbol;
        currency = currency.toLowerCase();  // Set the currency to lowercase
        if (null == currency) {
            symbol = "";                    // Default to empty string for unknown currencies
        } else symbol = switch (currency) { // Look for the correct symbol
            case "usd" -> "$";
            case "eur" -> "€";
            case "jpy" -> "¥";
            case "gbp" -> "£";
            case "aud" -> "A$";
            case "cad" -> "C$";
            case "chf" -> "Fr";
            case "cny" -> "¥";
            case "mxn" -> "$";
            case "nok" -> "kr";
            default -> "";
        }; 
        return symbol;                      // Return the symbol
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowCurrency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowCurrency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowCurrency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowCurrency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowCurrency().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title;
    private javax.swing.JLabel audChangePercent;
    private javax.swing.JLabel audChangeValue;
    private javax.swing.JLabel audImage;
    private javax.swing.JLabel audLabel;
    private javax.swing.JPanel audPanel;
    private javax.swing.JLabel audPrice;
    private javax.swing.JCheckBox autoUpdateCB;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel cadChangePercent;
    private javax.swing.JLabel cadChangeValue;
    private javax.swing.JLabel cadImage;
    private javax.swing.JLabel cadLabel;
    private javax.swing.JPanel cadPanel;
    private javax.swing.JLabel cadPrice;
    private javax.swing.JLabel chfChangePercent;
    private javax.swing.JLabel chfChangeValue;
    private javax.swing.JLabel chfImage;
    private javax.swing.JLabel chfLabel;
    private javax.swing.JPanel chfPanel;
    private javax.swing.JLabel chfPrice;
    private javax.swing.JLabel cnyChangePercent;
    private javax.swing.JLabel cnyChangeValue;
    private javax.swing.JLabel cnyImage;
    private javax.swing.JLabel cnyLabel;
    private javax.swing.JPanel cnyPanel;
    private javax.swing.JLabel cnyPrice;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel eurChangePercent;
    private javax.swing.JLabel eurChangeValue;
    private javax.swing.JLabel eurImage;
    private javax.swing.JLabel eurLabel;
    private javax.swing.JPanel eurPanel;
    private javax.swing.JLabel eurPrice;
    private javax.swing.JLabel gbpChangePercent;
    private javax.swing.JLabel gbpChangeValue;
    private javax.swing.JLabel gbpImage;
    private javax.swing.JLabel gbpLabel;
    private javax.swing.JPanel gbpPanel;
    private javax.swing.JLabel gbpPrice;
    private javax.swing.JLabel jpyChangePercent;
    private javax.swing.JLabel jpyChangeValue;
    private javax.swing.JLabel jpyImage;
    private javax.swing.JLabel jpyLabel;
    private javax.swing.JPanel jpyPanel;
    private javax.swing.JLabel jpyPrice;
    private javax.swing.JLabel mxnChangePercent;
    private javax.swing.JLabel mxnChangeValue;
    private javax.swing.JLabel mxnImage;
    private javax.swing.JLabel mxnLabel;
    private javax.swing.JPanel mxnPanel;
    private javax.swing.JLabel mxnPrice;
    private javax.swing.JLabel nokChangePercent;
    private javax.swing.JLabel nokChangeValue;
    private javax.swing.JLabel nokImage;
    private javax.swing.JLabel nokLabel;
    private javax.swing.JPanel nokPanel;
    private javax.swing.JLabel nokPrice;
    private javax.swing.JComboBox<String> selectedCurrency;
    private javax.swing.JButton updateButton;
    private javax.swing.JLabel usdChangePercent;
    private javax.swing.JLabel usdChangeValue;
    private javax.swing.JLabel usdImage;
    private javax.swing.JLabel usdLabel;
    private javax.swing.JPanel usdPanel;
    private javax.swing.JLabel usdPrice;
    private javax.swing.JPanel valuesPanel;
    private javax.swing.JScrollPane valuesScrollPane;
    // End of variables declaration//GEN-END:variables
}
